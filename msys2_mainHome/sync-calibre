#!/bin/bash
#calibre sync

maxsize=900000
baksize=1000000
# paths
calibre_x230="/d/KataLoGue/"
calibre_IKTI="/home/bambang_ebis/caltest"
FD="/f/[calibre]/KataLoGue/"
rsyncDest="bambang_ebis@10.126.12.212::calibre"

runLog="sync-calibre.$HOSTNAME.${1^^}.log"
dryLog="sync-calibre.$HOSTNAME.${1^^}.DRY_RUN"

# preview coloring
grepSysCol="mt=1;93"
grepSendCol="mt=1;34"
grepDelCol="mt=1;31"
grepUnchCol="mt=1;32"
grepSysMsg='(total:).*|(sending incremental file list)|(delta-transmission).*|.*(bytes\/sec)|.*(\(DRY RUN\))|$'
grepSendMsg='^(\[sender\]).*|$'
grepDelMsg='(deleting).*|$'
grepUnchMsg='.*(uptodate)$|$'

# test arguments
if [ $# -eq 0 ]; then
	echo -e '\e[31mYou have to specify pull or push, or export (FD)'
	exit 2
fi

# check IKTI online
IKTIonline() {
	local operation=$1
	if ssh IKTI "[ -d $calibre_IKTI ]"; then
		if [ "$operation" == 'pull' ]; then
			rsync -Cuazv --exclude-from=".exclude-calibre" "$rsyncDest" "$calibre_x230"/ --log-file="$runLog"
		elif [ "$operation" == 'push' ]; then
			rsync -Cuazv --exclude-from=".exclude-calibre" "$calibre_x230" "$rsyncDest" --delete-before --delete-excluded --log-file="$runLog"
		fi
	else
		echo -e "\e[41mServer is unreachable\e[0m"
		exit 1
	fi
}

if [ "$1" == 'pull' ]; then
	IKTIonline "$1"
	cp "$runLog" "$(cygpath $USERPROFILE)/dotfiles/.logs/"
elif [ "$1" == 'push' ]; then
	IKTIonline "$1"
	cp "$runLog" "$(cygpath $USERPROFILE)/dotfiles/.logs/"
elif [ "$1" == 'export' ]; then
	if [ -z "$2" ]; then
		if [ -d "$FD" ]; then
			rsync -Cuazv --exclude-from=".exclude-calibre" "$calibre_x230"/ "$FD" --delete-before --log-file="$runLog"
			cp "$HOSTNAME.calibre_$1(FD).log" "$(cygpath $USERPROFILE)/dotfiles/.logs/"
		else
			echo -e "\e[41mFlashdisk not found!!!\e[0m"
		fi
	else
		if [ -d "$2" ]; then
			rsync -Cuazv --exclude-from=".exclude-calibre" "$calibre_x230"/ "$2" --delete-before --log-file="$runLog"
			echo "Exported to $2" >> "$runLog"
			cp "$HOSTNAME.calibre_$1($(basename $2)).log" "$(cygpath $USERPROFILE)/dotfiles/.logs/"
		else
			echo -e "\e[31mPath doesn't exist!\e[0m"
		fi
	fi
fi

if [ -f "$runLog" ]; then
	filesize=$(stat -c%s "$runLog")
	if ((filesize > maxsize)) && ((filesize < baksize)); then
		echo -e "\e[30;43mCaution: Log file is 900kb large. Consider backing up and/or deleting. Log will be automatically archived soon.\e[0m"
	elif ((filesize > baksize)); then
		echo -e "\e[34;43mAttention: Log file is 1mb large. Archiving...\e[0m"
		for i in {1..3}; do
			if [ ! -f "$runLog.bak$i" ]; then
				tar -czvf "$runLog.bak$i" "$runLog" --remove-files
				echo -e "\e[34mLog file archived to $runLog.bak$i (uses tar gzip). Note that log backups are not sent to Git versioning.\e[0m"
				break
			elif [ -f "$runLog.bak1" ] && [ -f "$runLog.bak2" ] && [ -f "$runLog.bak3" ]; then
				echo -e "\e[31;44mArchive full! Highly advise deleting the log files and/or backups. This message will keep showing otherwise. File $runLog.bak$i exists.\e[0m"
			fi
		done
	fi
fi
