#!/bin/bash
#cmder config sync

maxsize=900000
baksize=1000000

# MAIN logic
if [ "$1" == 'pull' ]; then
	rsync -Ccazvvn "$(cygpath $USERPROFILE)/dotfiles/cmder_config/" "$CMDER_ROOT/config/" | tee "sync-cmder.$HOSTNAME.${1^^}.DRY_RUN" | GREP_COLORS='mt=1;93' egrep --color=always '(total:).*|(sending incremental file list)|(delta-transmission).*|.*(bytes\/sec)|.*(\(DRY RUN\))|$' | GREP_COLORS='mt=1;34' egrep --color=always '^(\[sender\]).*|$' | GREP_COLORS='mt=1;31' egrep --color=always '(deleting).*|$' | GREP_COLORS='mt=1;32' egrep --color=always '.*(uptodate)$|$' | less -R
	read -p "Confirm $1? [no] " yesOrYes
	yesOrYes=${yesOrYes:-no}
	if [ "$yesOrYes" == 'yes' ]; then
		rsync -Ccazv "$(cygpath $USERPROFILE)/dotfiles/cmder_config/" "$CMDER_ROOT/config/" --log-file="sync-cmder.$HOSTNAME.${1^^}.log"
		cp "sync-cmder.$HOSTNAME.${1^^}.log" "$(cygpath $USERPROFILE)/dotfiles/.logs/"
		rm "sync-cmder.$HOSTNAME.${1^^}.DRY_RUN"
	fi
elif [ "$1" == 'push' ]; then
	rsync -Ccazvvn --exclude-from=".exclude-cmder" "$CMDER_ROOT/config/" "$(cygpath $USERPROFILE)/dotfiles/cmder_config/" --delete | tee "sync-cmder.$HOSTNAME.${1^^}.DRY_RUN" | GREP_COLORS='mt=1;93' egrep --color=always '(total:).*|(sending incremental file list)|(delta-transmission).*|.*(bytes\/sec)|.*(\(DRY RUN\))|$' | GREP_COLORS='mt=1;34' egrep --color=always '^(\[sender\]).*|$' | GREP_COLORS='mt=1;31' egrep --color=always '(deleting).*|$' | GREP_COLORS='mt=1;32' egrep --color=always '.*(uptodate)$|$' | less -R
	read -p "Confirm $1? [no] " yesOrYes
	yesOrYes=${yesOrYes:-no}
	if [ "$yesOrYes" == 'yes' ]; then
		rsync -Ccazv --exclude-from=".exclude-cmder" "$CMDER_ROOT/config/" "$(cygpath $USERPROFILE)/dotfiles/cmder_config/" --delete --log-file="sync-cmder.$HOSTNAME.${1^^}.log"
		cp "sync-cmder.$HOSTNAME.${1^^}.log" "$(cygpath $USERPROFILE)/dotfiles/.logs/"
		rm "sync-cmder.$HOSTNAME.${1^^}.DRY_RUN"
	fi
else
	echo 'you have to specify pull or push'
fi

if [ -f "sync-cmder.$HOSTNAME.${1^^}.log" ]; then
	filesize=$(stat -c%s "sync-cmder.$HOSTNAME.${1^^}.log")
	if ((filesize > maxsize)) && ((filesize < baksize)); then
	    echo -e "\e[30;43mCaution: Log file is 900kb large. Consider backing up and/or deleting. Log will be automatically archived soon.\e[0m"
	elif ((filesize > baksize)); then
		echo -e "\e[34;43mAttention: Log file is 1mb large. Archiving...\e[0m"
		for i in {1..3}
		do
			if [ ! -f "sync-cmder.$HOSTNAME.${1^^}.log.bak$i" ]; then
				tar -czvf "sync-cmder.$HOSTNAME.${1^^}.log.bak$i" "sync-cmder.$HOSTNAME.${1^^}.log" --remove-files
				echo -e "\e[34mLog file archived to sync-cmder.$HOSTNAME.${1^^}.log.bak$i (uses tar gzip). Note that log backups are not sent to Git versioning.\e[0m"
				break
			elif [ -f "sync-cmder.$HOSTNAME.${1^^}.log.bak1" ] && [ -f "sync-cmder.$HOSTNAME.${1^^}.log.bak2" ] && [ -f "sync-cmder.$HOSTNAME.${1^^}.log.bak3" ]; then
				echo -e "\e[31;44mArchive full! Highly advise deleting the log files and/or backups. This message will keep showing otherwise. File sync-cmder.$HOSTNAME.${1^^}.log.bak$i exists.\e[0m"
			fi
		done
	fi
fi