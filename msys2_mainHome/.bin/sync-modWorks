#!/bin/bash
# modWorks sync

FD='/k/[modWorks]/'
PHD='/g/modSource/'
FO4_PCx="/j/gaming/illegal, no-drm, and freebies/Fallout 4"
FO4_x230="/d/FO4"

if [ -d "$FO4_x230" ]; then
	FDgo='/f/[modWorks]'
	FO4="portable"
	moddingDir="/d/_modWorks/=modding="
	echo -e "\e[44mDirectory D:\\FO4 found. On the road mode...\e[0m"
elif [ -d "$FO4_PCx" ]; then
	FO4="main"
	moddingDir="/d/WorkSpace/=modding="
	echo -e "\e[44mDirectory J:\\gaming\\Fallout 4 found. Homebase mode...\e[0m"
fi

function userConfirmation {
	local operation=$1
	read -p "Confirm push? [no] " yesOrYes
	yesOrYes=${yesOrYes:-no}
	if [ "$yesOrYes" == "yes" ]; then
		case $operation in
			'PCx_pull')
				echo "placeholder"
				;;
			'PCx_push')
				rsync -Ccazv "$FO4_PCx/Data/myCompatibilityPatches.esp" "$moddingDir/FO4/Data/"
				;;
			'PCx_push_model')
				rsync -Ccazv --filter="merge .filter-Data" --prune-empty-dirs "$FO4_PCx/Data/" "$moddingDir/FO4/Data/" --delete-before --delete-excluded --max-size=300m --log-file=~/sync-modWorks.PCX-push.log
				;;
			'PCx_push_vortex')
				rsync -Ccazv --prune-empty-dirs "$APPDATA/Vortex/fallout4/" "$moddingDir/.vortexConf/fallout4/" --delete-before --delete-excluded
				;;
			'x230_pull')
				rsync -Ccazv "$moddingDir/FO4/Data/" "$FO4_x230/Data/" --log-file=~/sync-modWorks.X230-pull.log
				;;
			'x230_push')
				rsync -Ccazv "$FO4_x230/Data/myCompatibilityPatches.esp" "$moddingDir/FO4/Data/"
				echo "done"
				;;
			'x230_push_full')
				rsync -Ccazv --filter="merge .filter-Data" --prune-empty-dirs "$FO4_x230/Data/" "$moddingDir/FO4/Data/" --delete-before --delete-excluded --max-size=300m --log-file=~/sync-modWorks.X230-push.log
				;;
		esac
	else
		echo -e "\e[31;104mSynchronization canceled...\e[0m"
	fi
}
function masterSync {
	rsync -Ccazvv "$FDgo/fallout4-vortex/" "$APPDATA/Vortex/fallout4" --delete-before
	rsync -Ccazvv --filter="merge .filter-ESP" "$FDgo/esps/" "$FO4_x230/Data/" --log-file=~/sync-modWorks.X230-rebase.MASTER.log
	echo -e "\e[34mDone overwriting files from master"
	exit 1
}
function copyChanged {
	local destination=$1
	read -p "Please enter the last git commit you want files to compare: " lastCommit
		# cp -v /d/WorkSpace/\=modding\=/FO4/BodySlideResult/* $HOMEPATH/Desktop/
		currentCommit=$(git rev-parse HEAD)
		if [ -z "$lastCommit" ]; then
			echo -e "\e[31mYou have to specify a commit hash\e[0m"
			exit 1
		else
			echo "Copying changed files since commit $lastCommit"
			for i in $(git diff --name-only $lastCommit $currentCommit)
    			do
        			# First create the target directory, if it doesn't exist.
        			mkdir -p "$destination/$(dirname $i)"
        			# Then copy over the file.
        			cp "$i" "$destination/$i"
    			done
		fi
}

if [ -z "$FO4" ]; then
	echo -e '\e[33mNeither source nor destination dir exists :(\e[0m'
elif [ "$1" == 'pull' ]; then # copy files to workspace
	if [ -d "$FDgo" ]; then
		read -p $'\e[34mExternal master source exist.\e[0m\nDo you want to overwrite? [no] ' masterWrite
		masterWrite=${masterWrite:-no}
		if [ "$masterWrite" == 'yes' ]; then
			masterSync
		fi
	fi
	if [ "$FO4" == "main" ]; then
		echo -e '\e[44mdue to the complex nature of modding it is \e[44;91mHIGHLY RECOMMENDED\e[44m that you copy the resulting files manually.\e[0m\nYou can use sync-modWorks.DRY_RUN.log as reference.'
		preview=$(rsync -Ccazvvn "$moddingDir/FO4/Data/" "/j/gaming/illegal, no-drm, and freebies/Fallout 4/Data/" --log-file=~/sync-modWorks.DRY_RUN.log)
		echo "$preview" | grep -v 'sender' | GREP_COLORS='mt=1;34' egrep --color=always '.*\.esp|$' | less -R
	elif [ "$FO4" == "portable" ]; then
		echo -e "\e[97;43mRemember, take notes of git branch, especially if this isn't master\e[0m"
		preview=$(rsync -Ccazvvn "$moddingDir/FO4/Data/" "$FO4_x230/Data/")
		echo "$preview" | grep -v 'sender' | GREP_COLORS='mt=1;34' egrep --color=always '.*\.esp|$' | less -R
		# echo -e '\e[41;97mThis dry run MUST be used as \e[1mREFERENCE\e[0m'
		userConfirmation x230_pull
	fi
elif [ "$1" == 'export' ]; then # copy temporary files to desktop
	if [ -z "$2" ]; then
		copyChanged "$HOMEPATH/Desktop"
	else
		copyChanged "$2"
	fi
elif [ "$1" == 'master' ]; then # copy current working copy
	if [ -d "$FD" ]; then
		rsync -Ccazv --filter="merge .filter-espBA2" --prune-empty-dirs "$FO4_PCx/Data/" /k/\[modWorks\]/esps/ --delete --delete-excluded --log-file=~/sync-modWorks.PCx_BA2.MASTER.log
	else
		echo -e "\e[41mYour portable flashdisk is not present or uses a different drive map\e[0m"
	fi
	if [ -d "$PHD" ]; then
		rsync -Ccazv --filter="merge .filter-MasterSync" --prune-empty-dirs "$FO4_PCx/Data/" /g/modSource/Data/ --delete --delete-excluded --log-file=~/sync-modWorks.PCx_Data.MASTER.log
	else
		echo -e "\e[41mYour portable harddisk is not present or uses a different drive map\e[0m"
	fi
elif [ "$1" == 'push' ]; then # copy edited files
	if [ -z "$2" ]; then
		read -p "Do you want to push model, esp, or vortex config? [esp] " whattopush
		whattopush=${whattopush:-esp}
	else
		whattopush="$2"
	fi
	if [ "$FO4" == "portable" ]; then
		if [ "$whattopush" == "esp" ]; then
			echo -e "\e[34mChecking myCompatibilityPatches.esp...\e[0m"
			rsync -Ccazvn "$FO4_x230/Data/myCompatibilityPatches.esp" "$moddingDir/FO4/Data/"
			userConfirmation x230_push
		elif [ "$whattopush" == "model" ]; then
			preview=$(rsync -Ccazvvn --filter="merge .filter-Data" --prune-empty-dirs "$FO4_x230/Data/" "$moddingDir/FO4/Data/" --delete-before --delete-excluded --max-size=300m)
			echo "$preview" | grep -v 'sender' | GREP_COLORS='mt=1;31' egrep --color=always '.*(over max-size)|$' | GREP_COLORS='mt=1;34' egrep --color=always '.*\.esp|$' | less -R
			userConfirmation x230_push_full
		else
			echo -e "\e[31;104mWrong option. Synchronization canceled...\e[0m"
		fi
	elif [ "$FO4" == "main" ]; then
		if [ "$whattopush" == "esp" ]; then
			echo -e "\e[34mChecking myCompatibilityPatches.esp...\e[0m"
			rsync -Ccazvn "$FO4_PCx/Data/myCompatibilityPatches.esp" "$moddingDir/FO4/Data/"
			userConfirmation PCx_push
		elif [ "$whattopush" == "model" ]; then
			preview=$(rsync -Ccazvvn --filter="merge .filter-Data" --prune-empty-dirs "$FO4_PCx/Data/" "$moddingDir/FO4/Data/" --delete-before --delete-excluded --max-size=300m)
			echo "$preview" | grep -v 'sender' | GREP_COLORS='mt=1;31' egrep --color=always '.*(over max-size)|$' | GREP_COLORS='mt=1;34' egrep --color=always '.*\.esp|$' | less -R
			userConfirmation PCx_push_model
		elif [ "$whattopush" == "vortex" ]; then
			preview=$(rsync -Ccazvvn --prune-empty-dirs "$APPDATA/Vortex/fallout4/" "$moddingDir/.vortexConf/fallout4/" --delete-before --delete-excluded)
			echo "$preview" | grep -v 'sender' | GREP_COLORS='mt=1;31' egrep --color=always '.*(deleting)|$' | less -R
			userConfirmation PCx_push_vortex
		else
			echo -e "\e[31;104mWrong option. Synchronization canceled...\e[0m"
		fi
	else
		echo -e "Youre neither at your pc nor your laptop... \e[31mWho or where the fluff are you?!\e[0m"
	fi
else
	echo "you have to specify pull or push (mastersync), or export to Desktop"
fi
