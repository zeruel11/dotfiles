#!/usr/bin/env bash

if [ $# -eq 0 ]; then
    echo -e "\e[31mUsage: $0 [status|start|stop]"
    exit 2
elif [ "$1" != "status" ] && [ "$1" != "start" ] && [ "$1" != "stop" ]; then
    echo -e "\e[31mUsage: $0 [status|start|stop]"
    exit 2
fi

# FIXME error
logDir="$HOME/logs"
declare -a ServiceArray=("rsync")

serviceStatus() {
    local servStat=$(pgrep $1)
    echo "$servStat"
}

serviceStart() {
    local servStat=$(serviceStatus $1)
    if [[ $servStat ]]; then
        echo "Stack $1 is already running at PID $servStat"
    else
        case $1 in
        rsync)
            rsync --daemon --config=/home/zeruel11/.config/rsync/rsyncd.conf
            echo "$1 started" &
            ;;
        esac
    fi
}

serviceStop() {
    local servStat=$(serviceStatus $1)
    if [[ $servStat ]]; then
        case $1 in
        rsync)
            kill $servStat && echo "Stack $1 stopped"
            ;;
        esac
    else
        echo "Stack $1 is not running"
    fi
}

serviceChoice() {
    case "$1" in
    [Rr]sync)
        echo "rsync"
        ;;
    esac
}

serviceCommand() {
    case $1 in
    'status')
        local statusResult=$(serviceStatus "$servList")
        if [[ $statusResult ]]; then
            echo "Stack $servList running at PID $statusResult"
        else
            echo "$servList is not running"
        fi
        ;;
    'start')
        serviceStart "$servList"
        ;;
    'stop')
        serviceStop "$servList"
        ;;
    esac
}

if [ -z "$2" ]; then
    for servList in "${ServiceArray[@]}"; do
        serviceCommand $1
    done
else
    for ((i = 2; i <= $#; i++)); do
        serviceName=$(serviceChoice "${!i}")
        if [ -z "$serviceName" ]; then
            echo "Usage: $0 $1 [rsync]"
        else
            for servList in $serviceName; do
                serviceCommand $1
            done
        fi
    done
fi
